name: Jon defensively tests for dependencies that dont work

on:
  pull_request:

permissions:
  pull-requests: write
  contents: read
  checks: write  # Needed to update PR status checks

jobs:
  detect_changes:
    uses: ./.github/workflows/detect_changes.yml

  # ✅ New Job: Mark "Dependency Check" as Passed if No Changes
  mark_no_changes:
    needs: detect_changes
    if: needs.detect_changes.outputs.deploy_functions == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Report PR Status Check - No Changes ✅
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Dependency Check",
              head_sha: context.sha,
              status: "completed",
              conclusion: "success",
              output: {
                title: "✅ No Dependencies Changed",
                summary: "This PR does not modify dependencies. No further checks needed."
              }
            });

  test_dependencies:
    needs: detect_changes
    if: needs.detect_changes.outputs.deploy_functions == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup Virtual Environment
        run: |
          cd functions
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip

      - name: Install Dependencies (Fail If Conflicts)
        id: install_deps
        continue-on-error: true  # Step can fail, but job will continue
        run: |
          cd functions
          source venv/bin/activate
          { pip install -r requirements.txt 2>&1 | tee install_errors.log; echo $? > exit_code.txt; } || true
        shell: bash

      - name: Capture Dependency Error
        id: capture_error
        if: steps.install_deps.outcome == 'failure'
        run: |
          echo "error_msg<<EOF" >> $GITHUB_ENV
          tail -n 10 functions/install_errors.log >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Report PR Status Check - Success ✅
        if: steps.install_deps.outcome == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Dependency Check",
              head_sha: context.sha,
              status: "completed",
              conclusion: "success",
              output: {
                title: "✅ Dependencies Installed Successfully",
                summary: "No conflicts found. Ready to merge!"
              }
            });

      - name: Report PR Status Check - Failure ❌
        if: steps.install_deps.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const errorMsg = process.env.error_msg || "Dependency installation failed, but no error message was captured.";
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Dependency Check",
              head_sha: context.sha,
              status: "completed",
              conclusion: "failure",
              output: {
                title: "❌ Dependency Conflict",
                summary: `This PR introduces dependency conflicts. Firebase Functions require specific package versions. Please resolve before merging.\n\n**Error Log:**\n\`\`\`\n${errorMsg}\n\`\`\``
              }
            });

      - name: Close Renovate PR if Dependencies Fail
        if: steps.install_deps.outcome == 'failure' && contains(github.actor, 'renovate')
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          gh pr comment $PR_NUMBER --body "⚠️ **Dependency Conflict!** This PR updates dependencies in a way that **breaks Firebase Functions**. Firebase requires specific package versions. Please adjust the Renovate config to avoid conflicts.

          **Error Log:**
          \`\`\`
          ${{ env.error_msg }}
          \`\`\`"
          gh pr close $PR_NUMBER
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


