name: Jon defensively tests for dependencies that dont work

on:
  pull_request:

permissions:
  pull-requests: write
  contents: read
  checks: write  # Needed to update PR status checks

jobs:
  detect_changes:
    uses: ./.github/workflows/detect_changes.yml

  test_dependencies:
    needs: detect_changes
    if: needs.detect_changes.outputs.deploy_functions == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup Virtual Environment
        run: |
          cd functions
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip

      - name: Install Dependencies (Fail If Conflicts)
        id: install_deps
        continue-on-error: true  # Capture failure instead of stopping execution
        run: |
          cd functions
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Report PR Status Check - Success ✅
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Dependency Check",
              head_sha: context.sha,
              status: "completed",
              conclusion: "success",
              output: {
                title: "✅ Dependencies Installed Successfully",
                summary: "No conflicts found. Ready to merge!"
              }
            });

      - name: Report PR Status Check - Failure ❌
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Dependency Check",
              head_sha: context.sha,
              status: "completed",
              conclusion: "failure",
              output: {
                title: "❌ Dependency Conflict",
                summary: "This PR introduces dependency conflicts. Firebase Functions require specific package versions. Please resolve before merging."
              }
            });

      - name: Close Renovate PR if Dependencies Fail
        if: failure() && contains(github.actor, 'renovate')
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          gh pr comment $PR_NUMBER --body "⚠️ **Dependency Conflict!** This PR updates dependencies in a way that **breaks Firebase Functions**. Firebase requires specific package versions. Please adjust the Renovate config to avoid conflicts."
          gh pr close $PR_NUMBER
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
