name: Detect Changes

on:
  workflow_call:
    outputs:
      deploy_functions:
        description: "Should deploy functions?"
        value: ${{ jobs.detect.outputs.deploy_functions }}
      deploy_hosting:
        description: "Should deploy hosting?"
        value: ${{ jobs.detect.outputs.deploy_hosting }}

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      deploy_functions: ${{ steps.check_changes.outputs.deploy_functions }}
      deploy_hosting: ${{ steps.check_changes.outputs.deploy_hosting }}
    steps:
      - name: Checkout Repository (Ensure Full History)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we get full commit history

      - name: Fetch and Compare Changes
        run: |
          # Fetch full history (to ensure diffs work correctly)
          git fetch --prune --unshallow
          
          # Get the latest commit SHA from main
          BASE_SHA=$(git rev-parse origin/main)
          echo "BASE_SHA=$BASE_SHA" >> "$GITHUB_ENV"
          echo "Comparing against: $BASE_SHA"
          
          # Check if we are in a direct push (not a PR)
          if [ "$GITHUB_EVENT_NAME" = "push" ]; then
            echo "Detected a direct push to main."
            PREV_SHA=$(git rev-parse HEAD^ || echo "")  # Get previous commit (fallback to empty)
            if [ -z "$PREV_SHA" ]; then
              echo "No previous commit found. Skipping diff."
              echo "deploy_functions=false" >> "$GITHUB_ENV"
              echo "deploy_hosting=false" >> "$GITHUB_ENV"
              exit 0
            fi
            BASE_SHA="$PREV_SHA"
          fi
          
          # Debugging: Show Git Status and Logs
          echo "===== DEBUG: GIT STATUS ====="
          git status
          echo "===== DEBUG: GIT LOG ====="
          git log --oneline -5
          echo "===== DEBUG: GIT DIFF ====="
          git diff --name-status $BASE_SHA..HEAD
          
          # Get changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          # Detect Functions changes
          if echo "$CHANGED_FILES" | grep -E '^functions/' > /dev/null; then
            echo "Deploying Functions!"
            echo "deploy_functions=true" >> "$GITHUB_ENV"
          else
            echo "No function changes detected."
            echo "deploy_functions=false" >> "$GITHUB_ENV"
          fi
          
          # Detect Hosting (public/) changes
          if echo "$CHANGED_FILES" | grep -E '^public/|^firebase.json' > /dev/null; then
            echo "Deploying Hosting!"
            echo "deploy_hosting=true" >> "$GITHUB_ENV"
          else
            echo "No hosting changes detected."
            echo "deploy_hosting=false" >> "$GITHUB_ENV"
          fi


